- name: Add Helm repository
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts
    state: present
  notify: Update Helm repositories

- name: Install
  kubernetes.core.helm:
    name: kube-prometheus-stack
    chart_ref: prometheus-community/kube-prometheus-stack
    release_namespace: "{{ app_namespace }}"
    create_namespace: true
    values:
      grafana:
        adminPassword: "{{ user_password }}"
        ingress:
          enabled: true
          annotations:
            nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-body-size: "512m"
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: grafissuer
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-passthrough: "true"
          ingressClassName: nginx
          hosts:
            - "{{ host_grafana }}"
          tls:
            - secretName: grafana-tls 
              hosts: 
                - "{{ host_grafana }}"
      prometheus:
        ingress:
          enabled: true
          annotations:
            nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-body-size: "512m"
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: promissuer
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-passthrough: "true"
            nginx.ingress.kubernetes.io/auth-type: basic
            nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
            nginx.ingress.kubernetes.io/auth-secret: basic-auth
          ingressClassName: nginx
          hosts:
            - "{{ host_prom }}"
          tls:
            - secretName: prometheus-tls 
              hosts: 
                - "{{ host_prom }}"
        state: present